name: Build and deploy
on:
  workflow_dispatch:
#  push:
#    branches:
#      - main

env:
  REGISTRY: ghcr.io
  REGISTRY_NAME: andrn19/tv2-cand-project
  SERVICE_CONTAINER_GROUP: video-analyser-service
  AKS_CLUSTER: tv2-video-analyser-cluster
  

jobs:
  build-database-registry-store:

    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: database-registry-store
    permissions:
      contents: read
      packages: write
    
    steps:  
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.SERVICE_NAME }}
        id: build-and-push-registry-store
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Backend/DatabaseRegistry/Database/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-database-registry:
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: database-registry
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.SERVICE_NAME }} 
        id: build-and-push-registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Backend/
          file: ./Backend/DatabaseRegistry/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-metadata-hadoop-store:

    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: metadata-hadoop-store
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.SERVICE_NAME }} 
        id: build-and-push-hadoop
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Backend/
          file: ./Backend/HadoopConsumer/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-gateway:

    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: gateway
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          

      - name: Build and push ${{ env.SERVICE_NAME }} 
        id: build-and-push-gateway
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Backend/
          file: ./Backend/Gateway/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-video-analyser:

    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: video-analyser
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.SERVICE_NAME }}
        id: build-and-push-analyser
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Backend/
          file: ./Backend/VideoAnalyser/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build-frontend:
  
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: frontend
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ env.SERVICE_NAME }} 
        id: build-and-push-registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./Frontend/
          file: ./Frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy-kubernetes:
    runs-on: ubuntu-latest
    needs: [build-database-registry-store,build-database-registry,build-metadata-hadoop-store,build-gateway,build-video-analyser,build-frontend]

    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks install-cli
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER }}
          kubectl create secret docker-registry regcred \
            --docker-server=${{ env.REGISTRY }} \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }}
          
      - name: Change deployment file image tags
        run: |
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/AnalyserService.yaml
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/DatabaseRegistry.yaml
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/Frontend.yaml
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/Gateway.yaml
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/MetadataHadoopStore.yaml
          sed -i "s+{IMG_TAG}+${{ github.sha }}+g" Deployment/Kubernetes/RabbitMQ.yaml

      - name: Deploy Container Instances
        run: kubectl apply -f Deployment/Kubernetes/
